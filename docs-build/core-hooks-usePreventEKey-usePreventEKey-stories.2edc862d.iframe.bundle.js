"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[9377],{"./src/core-hooks/usePreventEKey/usePreventEKey.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>usePreventEKey_stories});var react=__webpack_require__("./node_modules/react/index.js");const usePreventEKey_stories={title:"Core Hooks/usePreventEKey",parameters:{docs:{description:{component:"\nA React hook to prevent typing the 'e' or 'E' key in an input (useful for numeric inputs).\n\n**Example usage:**\n\n```tsx\nconst preventEKey = usePreventEKey();\n<input type=\"number\" onKeyDown={preventEKey} />\n```\n        "}}}},Basic={render:()=>{const[value,setValue]=(0,react.useState)(""),preventEKey=(0,react.useCallback)((e=>{"e"!==e.key&&"E"!==e.key||e.preventDefault()}),[]);return react.createElement("div",{style:{gap:10,display:"flex",flexDirection:"column"}},react.createElement("div",{style:{fontFamily:"monospace",background:"#f6f8fa",padding:16,borderRadius:8,maxWidth:400}},react.createElement("label",null,react.createElement("b",null,'Try typing "e" or "E":'),react.createElement("input",{type:"number",value,onChange:e=>setValue(e.target.value),onKeyDown:preventEKey,style:{marginLeft:8,padding:6,borderRadius:4,border:"1px solid #ccc",width:200},placeholder:"Number only"})),react.createElement("div",{style:{marginTop:16}},react.createElement("b",null,"Value:")," ",react.createElement("code",null,value))),react.createElement("div",{style:{fontFamily:"monospace",background:"#f6f8fa",padding:16,borderRadius:8}},react.createElement("div",null,react.createElement("code",null,react.createElement("pre",null,"\n              import {usePreventEKey} from 'react-restyle-components';\n\n              const [value, setValue] = useState('');\n              const preventEKey = usePreventEKey();\n\n                <input\n                  type=\"number\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                  onKeyDown={preventEKey}\n                  style={{\n                    marginLeft: 8,\n                    padding: 6,\n                    borderRadius: 4,\n                    border: '1px solid #ccc',\n                    width: 200,\n                  }}\n                  placeholder=\"Number only\"\n                />\n\n")),react.createElement("br",null),react.createElement("br",null))))}},__namedExportsOrder=["Basic"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [value, setValue] = useState('');\n    const preventEKey = usePreventEKey();\n    return <div style={{\n      gap: 10,\n      display: 'flex',\n      flexDirection: 'column'\n    }}>\n        <div style={{\n        fontFamily: 'monospace',\n        background: '#f6f8fa',\n        padding: 16,\n        borderRadius: 8,\n        maxWidth: 400\n      }}>\n          <label>\n            <b>Try typing \"e\" or \"E\":</b>\n            <input type=\"number\" value={value} onChange={e => setValue(e.target.value)} onKeyDown={preventEKey} style={{\n            marginLeft: 8,\n            padding: 6,\n            borderRadius: 4,\n            border: '1px solid #ccc',\n            width: 200\n          }} placeholder=\"Number only\" />\n          </label>\n          <div style={{\n          marginTop: 16\n        }}>\n            <b>Value:</b> <code>{value}</code>\n          </div>\n        </div>\n        <div style={{\n        fontFamily: 'monospace',\n        background: '#f6f8fa',\n        padding: 16,\n        borderRadius: 8\n      }}>\n          <div>\n            <code>\n              <pre>\n                {`\n              import {usePreventEKey} from 'react-restyle-components';\n\n              const [value, setValue] = useState('');\n              const preventEKey = usePreventEKey();\n\n                <input\n                  type=\"number\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                  onKeyDown={preventEKey}\n                  style={{\n                    marginLeft: 8,\n                    padding: 6,\n                    borderRadius: 4,\n                    border: '1px solid #ccc',\n                    width: 200,\n                  }}\n                  placeholder=\"Number only\"\n                />\n\n`}\n              </pre>\n            </code>\n            <br />\n            <br />\n          </div>\n        </div>\n      </div>;\n  }\n}",...Basic.parameters?.docs?.source}}}}}]);