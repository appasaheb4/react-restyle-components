"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[4092],{"./src/core-components/src/molecules/auto-complete-filter-single-select-multiple-fields-display/auto-complete-filter-single-select-multiple-fields-display.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>auto_complete_filter_single_select_multiple_fields_display_stories});var react=__webpack_require__("./node_modules/react/index.js"),icons_component=__webpack_require__("./src/core-components/src/atoms/icons/icons.component.tsx"),tc_module=__webpack_require__("./src/core-components/src/tc.module.css"),tc_module_default=__webpack_require__.n(tc_module),utility_util=__webpack_require__("./src/core-components/src/utils/utility.util.ts"),lib=__webpack_require__("./node_modules/@techabl/core-utils/lib/index.js");const AutoCompleteFilterSingleSelectMultiFieldsDisplay=({disable=!1,loader=!1,displayValue="",placeholder="Search...",data,hasError=!1,className,posstion="absolute",keyboard="text",onFilter,onSelect,onBlur})=>{const[value,setValue]=(0,react.useState)(displayValue),[options,setOptions]=(0,react.useState)(data.list),[isListOpen,setIsListOpen]=(0,react.useState)(!1),[filterValue,setFilterValue]=(0,react.useState)(),inputRef=(0,react.useRef)(null),wrapperRef=(0,react.useRef)(null);var ref;ref=wrapperRef,(0,react.useEffect)((()=>{function handleClickOutside(event){ref.current&&!ref.current.contains(event.target)&&isListOpen&&setIsListOpen(!1)}return document.addEventListener("mousedown",handleClickOutside),()=>{document.removeEventListener("mousedown",handleClickOutside)}}),[ref,isListOpen]),(0,react.useEffect)((()=>{setOptions(data.list)}),[data]),(0,react.useEffect)((()=>{setValue(displayValue)}),[displayValue]);return react.createElement(react.Fragment,null,react.createElement("div",{ref:wrapperRef,className:"w-full relative"},react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["p-2"],tc_module_default()["leading-4"],tc_module_default()["focus:outline-none"],tc_module_default()["focus:ring"],tc_module_default()["w-full"],tc_module_default()["shadow-sm"],tc_module_default()["sm:text-base"],tc_module_default().border,tc_module_default()["rounded-md"],{[tc_module_default()["border-red"]]:hasError,[tc_module_default()["border-gray-300"]]:!hasError,[tc_module_default()["dark:text-black"]]:!0})},react.createElement("input",{ref:inputRef,placeholder,type:keyboard,value,className:(0,utility_util.cn)(tc_module_default()["w-full"],tc_module_default()["focus:outline-none"],tc_module_default()["bg-none"],tc_module_default()["dark:text-black"],className),onKeyUp:e=>{if(8===(e.which?e.which:e.keyCode)){const search=e.target.value;(0,lib.debounce)((()=>{onFilter&&onFilter(search)}))}},onChange:e=>{const search=e.target.value;setValue(search),setFilterValue(search);const filteredOptions=data.list.filter((item=>data.displayKey.some((key=>item[key]?.toString().toLowerCase().includes(search.toLowerCase())))));setOptions(filteredOptions),(0,lib.debounce)((()=>{onFilter&&onFilter(search)}))},onClick:()=>setIsListOpen(!0),disabled:disable,onMouseDown:()=>setValue(""),onBlur:e=>onBlur&&onBlur(e),onKeyDown:e=>{if(("Enter"===e.key||"Tab"===e.key)&&options.length>0){const selectedItem=options.find((item=>item.labId===Number(value)));selectedItem&&(setValue(data.displayKey.map((key=>`${selectedItem[key]}`)).join(" - ")),setIsListOpen(!1),onSelect&&onSelect(selectedItem))}}}),isListOpen?react.createElement(icons_component.I,{nameIcon:"FaChevronUp",propsIcon:{color:"#000000",size:22}}):react.createElement(icons_component.I,{nameIcon:"FaChevronDown",propsIcon:{color:"#000000",size:22}})),options&&isListOpen?options.length>0&&react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().absolute,tc_module_default()["w-full"],tc_module_default()["bg-gray-100"],tc_module_default()["p-2"],tc_module_default()["rounded-sm"],tc_module_default()["overflow-y-auto"]),style:{zIndex:500,maxHeight:`${(()=>{if(inputRef.current){const inputRect=inputRef.current.getBoundingClientRect();return window.innerHeight-inputRect.bottom-20}return"calc(100vh - 140px)"})()}px`}},react.createElement("ul",null,options?.map(((item,index)=>react.createElement("li",{key:index,className:(0,utility_util.cn)(tc_module_default()["text-gray-400"],tc_module_default().flex,tc_module_default()["items-center"]),onClick:()=>{setValue(data.displayKey.map((key=>item[key])).filter((value=>null!=value)).join(" - ")),setIsListOpen(!1),onSelect&&onSelect(item)}},react.createElement("label",{className:(0,utility_util.cn)(tc_module_default()["ml-2"],tc_module_default()["mt-1"],tc_module_default()["text-black"]),style:{textOverflow:"ellipsis",minWidth:0,overflow:"hidden",whiteSpace:"nowrap"},title:data.displayKey.map((key=>item[key])).join(" - ")},data.displayKey.map((key=>item[key])).filter((value=>null!=value)).join(" - "))))))):null))};try{AutoCompleteFilterSingleSelectMultiFieldsDisplay.displayName="AutoCompleteFilterSingleSelectMultiFieldsDisplay",AutoCompleteFilterSingleSelectMultiFieldsDisplay.__docgenInfo={description:"",displayName:"AutoCompleteFilterSingleSelectMultiFieldsDisplay",props:{loader:{defaultValue:{value:"false"},description:"",name:"loader",required:!1,type:{name:"boolean"}},disable:{defaultValue:{value:"false"},description:"",name:"disable",required:!1,type:{name:"boolean"}},displayValue:{defaultValue:{value:""},description:"",name:"displayValue",required:!1,type:{name:"string"}},placeholder:{defaultValue:{value:"Search..."},description:"",name:"placeholder",required:!1,type:{name:"string"}},data:{defaultValue:null,description:"",name:"data",required:!0,type:{name:"any"}},hasError:{defaultValue:{value:"false"},description:"",name:"hasError",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},posstion:{defaultValue:{value:"absolute"},description:"",name:"posstion",required:!1,type:{name:"string"}},keyboard:{defaultValue:{value:"text"},description:"",name:"keyboard",required:!1,type:{name:"string"}},onFilter:{defaultValue:null,description:"",name:"onFilter",required:!1,type:{name:"((item: any) => void)"}},onSelect:{defaultValue:null,description:"",name:"onSelect",required:!1,type:{name:"((item: any) => any)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((item: any) => any)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/src/molecules/auto-complete-filter-single-select-multiple-fields-display/auto-complete-filter-single-select-multiple-fields-display.component.tsx#AutoCompleteFilterSingleSelectMultiFieldsDisplay"]={docgenInfo:AutoCompleteFilterSingleSelectMultiFieldsDisplay.__docgenInfo,name:"AutoCompleteFilterSingleSelectMultiFieldsDisplay",path:"src/core-components/src/molecules/auto-complete-filter-single-select-multiple-fields-display/auto-complete-filter-single-select-multiple-fields-display.component.tsx#AutoCompleteFilterSingleSelectMultiFieldsDisplay"})}catch(__react_docgen_typescript_loader_error){}const auto_complete_filter_single_select_multiple_fields_display_stories={title:"Core Components/Molecules/AutoCompleteFilterSingleSelectMultiFieldsDisplay",component:AutoCompleteFilterSingleSelectMultiFieldsDisplay,tags:["autodocs"],parameters:{componentSubtitle:"import { AutoCompleteFilterSingleSelectMultiFieldsDisplay } from 'react-restyle-components'",docs:{description:{component:"\nThis component provides an autocomplete dropdown for filtering and selecting a single item from multiple fields.\n\n### onFilter like this:\n```tsx\nonFilter: (value: string) => {\n  companyStore.companyService.filterByFields({\n    input: {\n      filter: {\n        fields: ['code', 'name'],\n        srText: value,\n      },\n      page: 0,\n      limit: 10,\n    },\n  });\n},\n```\n        "}}}},Basic={args:{loader:!1,placeholder:"Search by code or name...",hasError:!1,displayValue:"",data:{list:[{code:"Code1",name:"Value1"},{code:"Code2",name:"Value2"},{code:"Code3",name:"Value3"}],displayKey:["name"]},onFilter:value=>{console.log("Filtering with:",value)},onSelect:item=>{console.log({item})}},render:args=>react.createElement("div",{style:{minHeight:"20vh"}},react.createElement(AutoCompleteFilterSingleSelectMultiFieldsDisplay,args))},__namedExportsOrder=["Basic"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    loader: false,\n    placeholder: 'Search by code or name...',\n    hasError: false,\n    displayValue: '',\n    data: {\n      list: [{\n        code: 'Code1',\n        name: 'Value1'\n      }, {\n        code: 'Code2',\n        name: 'Value2'\n      }, {\n        code: 'Code3',\n        name: 'Value3'\n      }],\n      displayKey: ['name']\n    },\n    onFilter: (value: string) => {\n      console.log('Filtering with:', value);\n    },\n    onSelect: item => {\n      console.log({\n        item\n      });\n    }\n  },\n  render: args => <div style={{\n    minHeight: '20vh'\n  }}>\n      <AutoCompleteFilterSingleSelectMultiFieldsDisplay {...args} />\n    </div>\n}",...Basic.parameters?.docs?.source}}}}}]);