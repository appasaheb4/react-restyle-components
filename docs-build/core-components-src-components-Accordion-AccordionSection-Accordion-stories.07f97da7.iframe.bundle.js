/*! For license information please see core-components-src-components-Accordion-AccordionSection-Accordion-stories.07f97da7.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[2137],{"./src/core-components/src/components/Accordion/AccordionSection/Accordion.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,CustomHeader:()=>CustomHeader,FullPageVariant:()=>FullPageVariant,InlineVariant:()=>InlineVariant,NumberedSections:()=>NumberedSections,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Accordion_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js"),AccordionSection=__webpack_require__("./src/core-components/src/components/Accordion/AccordionSection/AccordionSection.tsx"),Accordion=__webpack_require__("./src/core-components/src/components/Accordion/AccordionSection/Accordion.tsx"),Icon=__webpack_require__("./src/core-components/src/components/Icon/index.ts");const testContent="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Auctor tristique vulputate et viverra felis massa metus, condimentum ero.",Wrapper=styled_components_browser_esm.I4.div`
  width: 100%;
`,Accordion_stories={title:"Components/Accordion/AccordionSection",component:Accordion.n,tags:["autodocs"],parameters:{componentSubtitle:"import { Accordion, AccordionSection } from '@techabl/core-components'",docs:{description:{component:'\nA flexible accordion component for organizing and displaying collapsible content sections.\n\n## Features\n- ðŸŽ¨ Two visual variants: `inline` (bordered) and `full-page` (borderless)\n- ðŸ”¢ Numbered sections or custom icons\n- ðŸ§© Composable headers with leading/trailing elements\n- â™¿ Accessible with keyboard navigation\n- ðŸŽ¯ Controlled state management\n\n## Basic Usage\n```tsx\nimport { Accordion, AccordionSection } from \'@techabl/core-components\';\n\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection \n    header="Payment methods"\n    subheader="Configure your payment options"\n  \n  >\n    <div>Content goes here...</div>\n  </AccordionSection>\n</Accordion>\n```\n        '}},layout:"centered"},decorators:[Story=>react.createElement(Wrapper,null,react.createElement(Story,null))],argTypes:{variant:{control:"select",options:["inline","full-page"],description:"Visual style variant"},numbered:{control:"boolean",description:"Show numbers instead of custom icons"}}},Basic={args:{variant:"inline",numbered:!1,children:react.createElement(AccordionSection.K,{header:"This is a short description that goes up to two rows",subheader:"Short sentence or subheading"},testContent)},parameters:{docs:{source:{code:'\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection \n    header="Payment methods"\n    subheader="Configure your payment options"\n  \n  >\n    <div>\n      <h4>Available Payment Methods</h4>\n      <ul>\n        <li>Credit/Debit Cards</li>\n        <li>PayPal</li>\n        <li>Bank Transfer</li>\n        <li>Digital Wallets</li>\n      </ul>\n    </div>\n  </AccordionSection>\n</Accordion>\n        ',language:"tsx"},description:{story:"Basic accordion with a single section, custom icon, and inline variant."}}}},CustomHeader={args:{variant:"inline",numbered:!1,children:react.createElement(AccordionSection.K,null,react.createElement(AccordionSection.K.Header,null,react.createElement(AccordionSection.K.Header.Leading,null,react.createElement(Icon.I.Compat,{src:"icon-placeholder"})),react.createElement(AccordionSection.K.Header.Heading,null,"Advanced Configuration Settings"),react.createElement(AccordionSection.K.Header.SupportiveText,null,"Customize your application preferences"),react.createElement(AccordionSection.K.Header.Trailing,{$alignment:"center"},react.createElement("img",{src:"https://picsum.photos/32/48",alt:"Status Badge",width:32,height:48,className:"rounded-md"}))),testContent)},parameters:{docs:{source:{code:'\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection>\n    <AccordionSection.Header>\n      <AccordionSection.Header.Leading>\n        <Icon.Compat src="MdSettings" />\n      </AccordionSection.Header.Leading>\n      <AccordionSection.Header.Heading>\n        Advanced Configuration Settings\n      </AccordionSection.Header.Heading>\n      <AccordionSection.Header.SupportiveText>\n        Customize your application preferences\n      </AccordionSection.Header.SupportiveText>\n      <AccordionSection.Header.Trailing $alignment="center">\n        <img src="/status-badge.png" alt="Status" width={32} height={48} />\n      </AccordionSection.Header.Trailing>\n    </AccordionSection.Header>\n    <div>Your settings content here...</div>\n  </AccordionSection>\n</Accordion>\n        ',language:"tsx"},description:{story:"Custom header with leading icon, heading, supportive text, and trailing element."}}}},InlineVariant={args:{variant:"inline",numbered:!1,children:react.createElement(react.Fragment,null,react.createElement(AccordionSection.K,{header:"Account Settings",subheader:"Manage your account"},react.createElement("div",null,"Account settings content...")),react.createElement(AccordionSection.K,{header:"Privacy & Security",subheader:"Control privacy settings"},react.createElement("div",null,"Privacy settings content...")),react.createElement(AccordionSection.K,{header:"Notifications",subheader:"Configure notifications"},react.createElement("div",null,"Notification settings content...")),react.createElement(AccordionSection.K,{header:"Billing Information",subheader:"Manage billing"},react.createElement("div",null,"Billing information content...")))},parameters:{docs:{source:{code:'\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection header="Account Settings" subheader="Manage your account" >\n    <div>Account settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Privacy & Security" subheader="Control privacy settings" >\n    <div>Privacy settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Notifications" subheader="Configure notifications">\n    <div>Notification settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Billing Information" subheader="Manage billing">\n    <div>Billing information content...</div>\n  </AccordionSection>\n</Accordion>\n        ',language:"tsx"},description:{story:"Multiple sections with inline variant (bordered, rounded corners)."}}}},FullPageVariant={args:{variant:"inline",numbered:!1,children:react.createElement(react.Fragment,null,react.createElement(AccordionSection.K,{header:"Getting Started",subheader:"Learn the basics"},react.createElement("div",null,react.createElement("h4",null,"Welcome!"),react.createElement("p",null,"Follow these steps to get started..."))),react.createElement(AccordionSection.K,{header:"Advanced Features",subheader:"Explore functionality"},react.createElement("div",null,"Advanced features content...")),react.createElement(AccordionSection.K,{header:"API Documentation",subheader:"Technical reference"},react.createElement("div",null,"API documentation content...")),react.createElement(AccordionSection.K,{header:"Support & Help",subheader:"Get help"},react.createElement("div",null,"Support information content...")))},parameters:{docs:{source:{code:'\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection header="Getting Started" subheader="Learn the basics" >\n    <div><h4>Welcome!</h4><p>Follow these steps to get started...</p></div>\n  </AccordionSection>\n  <AccordionSection header="Advanced Features" subheader="Explore functionality">\n    <div>Advanced features content...</div>\n  </AccordionSection>\n  <AccordionSection header="API Documentation" subheader="Technical reference" >\n    <div>API documentation content...</div>\n  </AccordionSection>\n  <AccordionSection header="Support & Help" subheader="Get help" >\n    <div>Support information content...</div>\n  </AccordionSection>\n</Accordion>\n        ',language:"tsx"},description:{story:"Multiple sections with full-page variant (no borders, square corners)."}}}},NumberedSections={args:{variant:"inline",numbered:!0,children:react.createElement(react.Fragment,null,react.createElement(AccordionSection.K,{header:"Step 1: Create Account",subheader:"Sign up for a new account"},react.createElement("div",null,react.createElement("p",null,"Fill out the registration form..."),react.createElement("ul",null,react.createElement("li",null,"Enter your email address"),react.createElement("li",null,"Choose a strong password"),react.createElement("li",null,"Verify your email")))),react.createElement(AccordionSection.K,{header:"Step 2: Complete Profile",subheader:"Add personal information"},react.createElement("div",null,"Profile completion content...")),react.createElement(AccordionSection.K,{header:"Step 3: Configure Settings",subheader:"Set up preferences"},react.createElement("div",null,"Settings configuration content...")),react.createElement(AccordionSection.K,{header:"Step 4: Start Using",subheader:"Begin your journey"},react.createElement("div",null,"Getting started content...")))},parameters:{docs:{source:{code:'\n<Accordion variant="inline" numbered={true}>\n  <AccordionSection header="Step 1: Create Account" subheader="Sign up for a new account">\n    <div>\n      <p>Fill out the registration form...</p>\n      <ul>\n        <li>Enter your email address</li>\n        <li>Choose a strong password</li>\n        <li>Verify your email</li>\n      </ul>\n    </div>\n  </AccordionSection>\n  <AccordionSection header="Step 2: Complete Profile" subheader="Add personal information">\n    <div>Profile completion content...</div>\n  </AccordionSection>\n  <AccordionSection header="Step 3: Configure Settings" subheader="Set up preferences">\n    <div>Settings configuration content...</div>\n  </AccordionSection>\n  <AccordionSection header="Step 4: Start Using" subheader="Begin your journey">\n    <div>Getting started content...</div>\n  </AccordionSection>\n</Accordion>\n        ',language:"tsx"},description:{story:"Sequential numbered sections perfect for step-by-step processes and tutorials."}}}},__namedExportsOrder=["Basic","CustomHeader","InlineVariant","FullPageVariant","NumberedSections"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    variant: 'inline',\n    numbered: false,\n    children: <AccordionSection header={testHeader} subheader={testSubheader}>\n        {testContent}\n      </AccordionSection>\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<Accordion variant=\"inline\" numbered={false}>\n  <AccordionSection \n    header=\"Payment methods\"\n    subheader=\"Configure your payment options\"\n  \n  >\n    <div>\n      <h4>Available Payment Methods</h4>\n      <ul>\n        <li>Credit/Debit Cards</li>\n        <li>PayPal</li>\n        <li>Bank Transfer</li>\n        <li>Digital Wallets</li>\n      </ul>\n    </div>\n  </AccordionSection>\n</Accordion>\n        `,\n        language: 'tsx'\n      },\n      description: {\n        story: 'Basic accordion with a single section, custom icon, and inline variant.'\n      }\n    }\n  }\n}",...Basic.parameters?.docs?.source}}},CustomHeader.parameters={...CustomHeader.parameters,docs:{...CustomHeader.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'inline\',\n    numbered: false,\n    children: <AccordionSection>\n        <AccordionSection.Header>\n          <AccordionSection.Header.Leading>\n            <Icon.Compat src={testIcon} />\n          </AccordionSection.Header.Leading>\n          <AccordionSection.Header.Heading>\n            Advanced Configuration Settings\n          </AccordionSection.Header.Heading>\n          <AccordionSection.Header.SupportiveText>\n            Customize your application preferences\n          </AccordionSection.Header.SupportiveText>\n          <AccordionSection.Header.Trailing $alignment="center">\n            <img src="https://picsum.photos/32/48" alt="Status Badge" width={32} height={48} className="rounded-md" />\n          </AccordionSection.Header.Trailing>\n        </AccordionSection.Header>\n        {testContent}\n      </AccordionSection>\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection>\n    <AccordionSection.Header>\n      <AccordionSection.Header.Leading>\n        <Icon.Compat src="MdSettings" />\n      </AccordionSection.Header.Leading>\n      <AccordionSection.Header.Heading>\n        Advanced Configuration Settings\n      </AccordionSection.Header.Heading>\n      <AccordionSection.Header.SupportiveText>\n        Customize your application preferences\n      </AccordionSection.Header.SupportiveText>\n      <AccordionSection.Header.Trailing $alignment="center">\n        <img src="/status-badge.png" alt="Status" width={32} height={48} />\n      </AccordionSection.Header.Trailing>\n    </AccordionSection.Header>\n    <div>Your settings content here...</div>\n  </AccordionSection>\n</Accordion>\n        `,\n        language: \'tsx\'\n      },\n      description: {\n        story: \'Custom header with leading icon, heading, supportive text, and trailing element.\'\n      }\n    }\n  }\n}',...CustomHeader.parameters?.docs?.source}}},InlineVariant.parameters={...InlineVariant.parameters,docs:{...InlineVariant.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'inline\',\n    numbered: false,\n    children: <>\n        <AccordionSection header="Account Settings" subheader="Manage your account">\n          <div>Account settings content...</div>\n        </AccordionSection>\n        <AccordionSection header="Privacy & Security" subheader="Control privacy settings">\n          <div>Privacy settings content...</div>\n        </AccordionSection>\n        <AccordionSection header="Notifications" subheader="Configure notifications">\n          <div>Notification settings content...</div>\n        </AccordionSection>\n        <AccordionSection header="Billing Information" subheader="Manage billing">\n          <div>Billing information content...</div>\n        </AccordionSection>\n      </>\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection header="Account Settings" subheader="Manage your account" >\n    <div>Account settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Privacy & Security" subheader="Control privacy settings" >\n    <div>Privacy settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Notifications" subheader="Configure notifications">\n    <div>Notification settings content...</div>\n  </AccordionSection>\n  <AccordionSection header="Billing Information" subheader="Manage billing">\n    <div>Billing information content...</div>\n  </AccordionSection>\n</Accordion>\n        `,\n        language: \'tsx\'\n      },\n      description: {\n        story: \'Multiple sections with inline variant (bordered, rounded corners).\'\n      }\n    }\n  }\n}',...InlineVariant.parameters?.docs?.source}}},FullPageVariant.parameters={...FullPageVariant.parameters,docs:{...FullPageVariant.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'inline\',\n    numbered: false,\n    children: <>\n        <AccordionSection header="Getting Started" subheader="Learn the basics">\n          <div>\n            <h4>Welcome!</h4>\n            <p>Follow these steps to get started...</p>\n          </div>\n        </AccordionSection>\n        <AccordionSection header="Advanced Features" subheader="Explore functionality">\n          <div>Advanced features content...</div>\n        </AccordionSection>\n        <AccordionSection header="API Documentation" subheader="Technical reference">\n          <div>API documentation content...</div>\n        </AccordionSection>\n        <AccordionSection header="Support & Help" subheader="Get help">\n          <div>Support information content...</div>\n        </AccordionSection>\n      </>\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<Accordion variant="inline" numbered={false}>\n  <AccordionSection header="Getting Started" subheader="Learn the basics" >\n    <div><h4>Welcome!</h4><p>Follow these steps to get started...</p></div>\n  </AccordionSection>\n  <AccordionSection header="Advanced Features" subheader="Explore functionality">\n    <div>Advanced features content...</div>\n  </AccordionSection>\n  <AccordionSection header="API Documentation" subheader="Technical reference" >\n    <div>API documentation content...</div>\n  </AccordionSection>\n  <AccordionSection header="Support & Help" subheader="Get help" >\n    <div>Support information content...</div>\n  </AccordionSection>\n</Accordion>\n        `,\n        language: \'tsx\'\n      },\n      description: {\n        story: \'Multiple sections with full-page variant (no borders, square corners).\'\n      }\n    }\n  }\n}',...FullPageVariant.parameters?.docs?.source}}},NumberedSections.parameters={...NumberedSections.parameters,docs:{...NumberedSections.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: \'inline\',\n    numbered: true,\n    children: <>\n        <AccordionSection header="Step 1: Create Account" subheader="Sign up for a new account">\n          <div>\n            <p>Fill out the registration form...</p>\n            <ul>\n              <li>Enter your email address</li>\n              <li>Choose a strong password</li>\n              <li>Verify your email</li>\n            </ul>\n          </div>\n        </AccordionSection>\n        <AccordionSection header="Step 2: Complete Profile" subheader="Add personal information">\n          <div>Profile completion content...</div>\n        </AccordionSection>\n        <AccordionSection header="Step 3: Configure Settings" subheader="Set up preferences">\n          <div>Settings configuration content...</div>\n        </AccordionSection>\n        <AccordionSection header="Step 4: Start Using" subheader="Begin your journey">\n          <div>Getting started content...</div>\n        </AccordionSection>\n      </>\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<Accordion variant="inline" numbered={true}>\n  <AccordionSection header="Step 1: Create Account" subheader="Sign up for a new account">\n    <div>\n      <p>Fill out the registration form...</p>\n      <ul>\n        <li>Enter your email address</li>\n        <li>Choose a strong password</li>\n        <li>Verify your email</li>\n      </ul>\n    </div>\n  </AccordionSection>\n  <AccordionSection header="Step 2: Complete Profile" subheader="Add personal information">\n    <div>Profile completion content...</div>\n  </AccordionSection>\n  <AccordionSection header="Step 3: Configure Settings" subheader="Set up preferences">\n    <div>Settings configuration content...</div>\n  </AccordionSection>\n  <AccordionSection header="Step 4: Start Using" subheader="Begin your journey">\n    <div>Getting started content...</div>\n  </AccordionSection>\n</Accordion>\n        `,\n        language: \'tsx\'\n      },\n      description: {\n        story: \'Sequential numbered sections perfect for step-by-step processes and tutorials.\'\n      }\n    }\n  }\n}',...NumberedSections.parameters?.docs?.source}}}},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()}}]);
//# sourceMappingURL=core-components-src-components-Accordion-AccordionSection-Accordion-stories.07f97da7.iframe.bundle.js.map