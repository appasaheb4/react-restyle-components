"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[556],{"./src/core-utils/src/convert/numberToWords/numToWords.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,default:()=>numToWords_stories,numToWords:()=>numToWords_stories_numToWords});var react=__webpack_require__("./node_modules/react/index.js");const numToWords=n=>{const a=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],b=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],g=["","thousand","lakh","crore","arab","kharab","neel","padma","shankh"],gPlural=["","thousand","lakhs","crores","arabs","kharabs","neels","padmas","shankhs"];if("number"==typeof n&&(n=String(n)),"0"===n)return"zero";const groups=(xs=>{if(xs.length<=3)return[xs];const last3=xs.slice(xs.length-3),rest=xs.slice(0,xs.length-3),pairs=[];for(;rest.length>0;)pairs.unshift(rest.splice(-2));return[...pairs,last3]})(Array.from(n));return groups.map(((group,i,arr)=>{if(i===arr.length-1)for(;group.length<3;)group.unshift("0");else for(;group.length<2;)group.unshift("0");return(group=>{if(0===Number(group.join("")))return"";if(3===group.length){let[h,t,o]=group.map(Number),str="";h&&(str+=a[h]+" hundred ");let lastTwo=10*t+o;return lastTwo&&(str&&(str+="and "),str+=lastTwo<20?a[lastTwo]:b[t]+(o?"-"+a[o]:"")),str.trim()}if(2===group.length){let[t,o]=group.map(Number);return 0===t?a[o]:10*t+o<20?a[10*t+o]:b[t]+(o?"-"+a[o]:"")}return 1===group.length?a[Number(group[0])]:""})(group)})).map(((word,i,arr)=>{const unitIdx=arr.length-1-i,groupValue=Number(groups[i].join(""));return word?`${word} ${groupValue>1&&g[unitIdx]?gPlural[unitIdx]:g[unitIdx]}`.trim():""})).filter(Boolean).join(" ").replace(/\s+/g," ").trim()},numToWords_stories={title:"Core Utils/Convert/Number",parameters:{docs:{description:{component:'\nConverts a number to its English words representation.\n\n```ts\nnumToWords(12345); // "twelve thousand three hundred forty-five"\n```\n        '}}}},numToWords_stories_numToWords={args:{value:440040},render:({value})=>{const result=numToWords(value);return react.createElement("div",{style:{fontFamily:"monospace",background:"#f6f8fa",padding:16,borderRadius:8}},react.createElement("div",null,react.createElement("code",null,"import {numToWords} from 'react-restyle-components';",react.createElement("br",null),"const result = numToWords(440040)"),react.createElement("br",null),react.createElement("br",null)),react.createElement("div",null,react.createElement("b",null,"Input:")," ",react.createElement("code",null,JSON.stringify(value))),react.createElement("div",null,react.createElement("b",null,"Output:")," ",react.createElement("code",null,result)))}},__namedExportsOrder=["numToWords"];numToWords_stories_numToWords.parameters={...numToWords_stories_numToWords.parameters,docs:{...numToWords_stories_numToWords.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: 440040\n  },\n  render: ({\n    value\n  }) => {\n    const result = numberToWords(value);\n    return <div style={{\n      fontFamily: 'monospace',\n      background: '#f6f8fa',\n      padding: 16,\n      borderRadius: 8\n    }}>\n        <div>\n          <code>\n            {`import {numToWords} from 'react-restyle-components';`}\n            <br />\n            {`const result = numToWords(440040)`}\n          </code>\n          <br />\n          <br />\n        </div>\n        <div>\n          <b>Input:</b> <code>{JSON.stringify(value)}</code>\n        </div>\n        <div>\n          <b>Output:</b> <code>{result}</code>\n        </div>\n      </div>;\n  }\n}",...numToWords_stories_numToWords.parameters?.docs?.source}}}}}]);