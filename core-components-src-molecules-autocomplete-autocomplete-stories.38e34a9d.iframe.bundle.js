"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[1824],{"./src/core-components/src/molecules/autocomplete/autocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,__namedExportsOrder:()=>__namedExportsOrder,default:()=>autocomplete_stories});var react=__webpack_require__("./node_modules/react/index.js"),tc_module=__webpack_require__("./src/core-components/src/tc.module.css"),tc_module_default=__webpack_require__.n(tc_module),utility_util=__webpack_require__("./src/core-components/src/utils/utility.util.ts");const Autocomplete=({value="",onValueChange,options=[]})=>{const[activeOption,setActiveOption]=(0,react.useState)(""===value||-1===options.indexOf(value)?0:options.indexOf(value)),[filteredOptions,setFilteredOptions]=(0,react.useState)(options),[shouldShowList,setShouldShowList]=(0,react.useState)(!1),[searchValue,setSearchValue]=(0,react.useState)(value),inputRef=(0,react.useRef)(null),listRef=(0,react.useRef)(null),onInputChange=(0,react.useCallback)((event=>{const input=event.target.value;if(""!=input){const newFilteredOptions=options.filter((option=>option.toLowerCase().indexOf(input.toLowerCase())>-1));setFilteredOptions(newFilteredOptions)}else setFilteredOptions(options);setActiveOption(0),setShouldShowList(!0),setSearchValue(input)}),[setActiveOption,setFilteredOptions,setShouldShowList,setSearchValue,onValueChange]),onOptionClick=(0,react.useCallback)((event=>{const symbol=event.currentTarget.innerText||event.currentTarget.textContent||"";setShouldShowList(!1),setActiveOption(0),setFilteredOptions([]),setSearchValue(symbol),onValueChange(symbol)}),[setShouldShowList,setActiveOption,setFilteredOptions,setSearchValue,onValueChange]),onKeyDown=(0,react.useCallback)((event=>{let selectedItem="";if(38===event.keyCode){if(event.preventDefault(),0===activeOption)return;selectedItem=filteredOptions[activeOption-1],setSearchValue(filteredOptions[activeOption-1]),setActiveOption(activeOption-1),listRef.current?.scroll({top:34*(activeOption-1)})}else if(40===event.keyCode){if(event.preventDefault(),activeOption===filteredOptions.length-1)return;selectedItem=filteredOptions[activeOption+1],setSearchValue(filteredOptions[activeOption+1]),setActiveOption(activeOption+1),listRef.current?.scroll({top:34*(activeOption+1)})}Object.keys(selectedItem)?.length>0&&onValueChange(selectedItem)}),[setActiveOption,setSearchValue,filteredOptions,activeOption,onValueChange]);return(0,react.useEffect)((()=>{setTimeout((()=>{inputRef.current?.select()}),0),filteredOptions[0]&&onValueChange(filteredOptions[0])}),[]),react.createElement(react.Fragment,null,react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["flex-col"],tc_module_default().relative)},react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["leading-4"],tc_module_default()["p-2"],tc_module_default()["focus:outline-none"],tc_module_default()["focus:ring"],tc_module_default()["w-full"],tc_module_default()["shadow-sm"],tc_module_default()["sm:text-base"],tc_module_default().border,tc_module_default()["rounded-md"])},react.createElement("input",{type:"text",role:"input",name:"autocomplete-input",className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["focus:outline-none"]),placeholder:"Search...",onChange:onInputChange,onKeyDown,value:searchValue,ref:inputRef,onClick:()=>{setShouldShowList(!0)}})),react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex)},react.createElement(react.Fragment,null,shouldShowList?react.createElement(react.Fragment,null,react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default().absolute,tc_module_default()["rounded-sm"],tc_module_default()["w-full"]),style:{zIndex:999}},filteredOptions?.length>0?react.createElement("ul",{role:"list",className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["flex-col"],tc_module_default()["gap-1"],tc_module_default()["bg-gray-200"],tc_module_default()["w-full"]),id:"list",ref:listRef},filteredOptions?.map(((option,index)=>{let className=(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["gap-2"],tc_module_default()["p-2"]);return index===activeOption&&(className=(0,utility_util.cn)(className,tc_module_default()["font-bold"])),react.createElement("li",{className,role:"listitem",key:index,onClick:onOptionClick},option)}))):react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["bg-gray-200"],tc_module_default()["w-full"],tc_module_default()["p-2"])},react.createElement("span",null,"Not Found Result!!")))):react.createElement(react.Fragment,null)))))};try{Autocomplete.displayName="Autocomplete",Autocomplete.__docgenInfo={description:"",displayName:"Autocomplete",props:{value:{defaultValue:{value:""},description:"",name:"value",required:!1,type:{name:"string"}},onValueChange:{defaultValue:null,description:"",name:"onValueChange",required:!0,type:{name:"(value: string) => void"}},options:{defaultValue:{value:"[]"},description:"",name:"options",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/src/molecules/autocomplete/autocomplete.tsx#Autocomplete"]={docgenInfo:Autocomplete.__docgenInfo,name:"Autocomplete",path:"src/core-components/src/molecules/autocomplete/autocomplete.tsx#Autocomplete"})}catch(__react_docgen_typescript_loader_error){}const autocomplete_stories={title:"Core Components/Molecules/Autocomplete",component:Autocomplete,tags:["autodocs"],parameters:{componentSubtitle:"import { Autocomplete } from 'react-restyle-components'"}},Basic={args:{value:"",onValueChange:()=>{},options:["One","Two","Three","Four"]},render:args=>react.createElement("div",{style:{minHeight:"20vh"}},react.createElement(Autocomplete,args))},__namedExportsOrder=["Basic"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: '',\n    onValueChange: () => {},\n    options: ['One', 'Two', 'Three', 'Four']\n  },\n  render: args => <div style={{\n    minHeight: '20vh'\n  }}>\n      <Autocomplete {...args} />\n    </div>\n}",...Basic.parameters?.docs?.source}}}},"./src/core-components/src/utils/utility.util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)(inputs))}}]);