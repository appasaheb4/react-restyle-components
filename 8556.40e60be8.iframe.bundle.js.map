{"version":3,"file":"8556.40e60be8.iframe.bundle.js","mappings":";;;;AASA;;AAEA;;;;AAKA;;;;;;AAOA;;;AAIA;;;;;;;AASA;;;;;AC/BA;AASA","sources":["webpack://react-restyle-components/./src/core-components/src/utils/stories/Wrappers.tsx","webpack://react-restyle-components/./src/core-components/src/utils/styling/createTransition.ts"],"sourcesContent":["import React from 'react';\nimport { styled } from 'styled-components';\n\nexport const Wrappers = {\n  Default: styled.div`\n    display: flex;\n    justify-content: flex-start;\n    padding: 2rem;\n  `,\n  Dashed: styled.div<{ $width?: string }>`\n    margin: auto;\n    ${({ $width }) => $width && `width: ${$width};`}\n    border: 2px dashed var(--aui-primary);\n    border-radius: 8px;\n    padding: 8px;\n  `,\n  TextInput: styled.div`\n    width: 250px;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin: auto;\n  `,\n  Modal: styled.div`\n    height: 100%;\n    margin: -1rem;\n  `,\n  Row: styled.div`\n    max-width: 100%;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    justify-content: center;\n  `,\n\n  Test: styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    width: min(100%, 600px);\n  `,\n};\n\nexport const Decorators = Object.entries(Wrappers).reduce(\n  (acc, [title, Wrapper]) => ({\n    ...acc,\n    [title]: (Story: React.ComponentType) => (\n      <Wrapper>\n        <Story />\n      </Wrapper>\n    ),\n  }),\n  {}\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n) as Record<keyof typeof Wrappers, (Story: React.ComponentType) => JSX.Element>;\n","import { css } from 'styled-components';\n\nexport const transitionDuration = '0.2s';\nexport const transitionTimingFunction = 'ease-in-out';\n\nexport const createTransition = ({\n  properties,\n  duration = transitionDuration,\n  timingFunction = transitionTimingFunction,\n}: {\n  properties: string[];\n  duration?: string;\n  timingFunction?: string;\n}) => css`\n  transition: ${properties\n    .map((property) => `${property} ${duration} ${timingFunction}`)\n    .join(', ')};\n`;\n"],"names":[],"sourceRoot":""}