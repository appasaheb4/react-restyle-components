"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[5007],{"./src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,BasicOneButton:()=>BasicOneButton,FillModes:()=>FillModes,Vertical:()=>Vertical,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/core-components/atoms/tooltip/tooltip.component.tsx"),_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/core-components/atoms/button/buttonGroup/buttonGroup.component.tsx"),_button_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/core-components/atoms/button/button.component.tsx"),react_router_dom__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react-router/dist/development/chunk-D52XG6IA.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Design System/Atoms/Button/ButtonGroup",parameters:{componentSubtitle:"A container for grouping buttons together. Used when you want no space between buttons. Can also be used to create a split button using a Button and a DropdownMenu."},component:_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,tags:["autodocs"],decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.Kd,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_1__.Bc,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))))]},Basic={args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))}},BasicOneButton={args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"))}},Vertical={args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3")),orientation:"vertical"}},FillModes={args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null)},render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1",null,"Hug"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"By default the ToggleGroup will hug its contents vertically and horizontally. In most cases this is what you will want as the Design System mostly uses this approach."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1",null,"Orientation: horizontal"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"But you can make it fill its parent and stretch out its children. Note that only the minimum amount of styles have been added. It is likely you will need to further customize your Buttons using className to suit your use case."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{horizontalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"Or vertically"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{verticalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"Or both"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{verticalSizing:"fill",horizontalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("h1",null,"Orientation: vertical"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"These also work vertically. Here is horizontal fill"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{orientation:"vertical",horizontalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"vertical"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{orientation:"vertical",verticalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"and both"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px",height:"200px",display:"grid",background:"#eee"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_buttonGroup_component__WEBPACK_IMPORTED_MODULE_2__.e,{orientation:"vertical",verticalSizing:"fill",horizontalSizing:"fill"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_button_component__WEBPACK_IMPORTED_MODULE_3__.$,{scale:"s"},"Button 3"))))},__namedExportsOrder=["Basic","BasicOneButton","Vertical","FillModes"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n        <Button scale="s">Button 1</Button>\n        <Button scale="s">Button 2</Button>\n        <Button scale="s">Button 3</Button>\n      </>\n  }\n}',...Basic.parameters?.docs?.source},description:{story:"At its simplest you can just wrap any `Button` elements in a `ButtonGroup`.\n\nAll props for button scale, variant, etc stay on the Button.\nYou should use the same scale for all buttons in a group but could mix and match variants and levels.",...Basic.parameters?.docs?.description}}},BasicOneButton.parameters={...BasicOneButton.parameters,docs:{...BasicOneButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n        <Button scale="s">Button 1</Button>\n      </>\n  }\n}',...BasicOneButton.parameters?.docs?.source},description:{story:"If only a single `Button` is passed in, it will be visually the same as not wrapping in a `ButtonGroup`.",...BasicOneButton.parameters?.docs?.description}}},Vertical.parameters={...Vertical.parameters,docs:{...Vertical.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <>\n        <Button scale="s">Button 1</Button>\n        <Button scale="s">Button 2</Button>\n        <Button scale="s">Button 3</Button>\n      </>,\n    orientation: \'vertical\'\n  }\n}',...Vertical.parameters?.docs?.source},description:{story:'To creat a split button you would add a `DropdownMenu` as the last child. Its trigger should be a `Button`.\nButtonGroups can be passed `orientation="vertical"` to stack buttons vertically.',...Vertical.parameters?.docs?.description}}},FillModes.parameters={...FillModes.parameters,docs:{...FillModes.parameters?.docs,source:{originalSource:'{\n  args: {\n    children: <></>\n  },\n  render: () => <>\n      <h1>Hug</h1>\n      <p>\n        By default the ToggleGroup will hug its contents vertically and\n        horizontally. In most cases this is what you will want as the Design\n        System mostly uses this approach.\n      </p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup>\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <h1>Orientation: horizontal</h1>\n      <p>\n        But you can make it fill its parent and stretch out its children. Note\n        that only the minimum amount of styles have been added. It is likely you\n        will need to further customize your Buttons using className to suit your\n        use case.\n      </p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup horizontalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <p>Or vertically</p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup verticalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <p>Or both</p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup verticalSizing="fill" horizontalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <h1>Orientation: vertical</h1>\n      <p>These also work vertically. Here is horizontal fill</p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup orientation="vertical" horizontalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <p>vertical</p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup orientation="vertical" verticalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n      <p>and both</p>\n      <div style={{\n      width: \'400px\',\n      height: \'200px\',\n      display: \'grid\',\n      background: \'#eee\'\n    }}>\n        <ButtonGroup orientation="vertical" verticalSizing="fill" horizontalSizing="fill">\n          <Button scale="s">Button 1</Button>\n          <Button scale="s">Button 2</Button>\n          <Button scale="s">Button 3</Button>\n        </ButtonGroup>\n      </div>\n    </>\n}',...FillModes.parameters?.docs?.source},description:{story:"Vertical ButtonGroups can also contain a `DropdownMenu`.\nButtonGroups also work with LinkButtons and ToggleButtons.\n\nHowever ToggleButton styling is not currently ideal as the divider is hard to see.\nAlso note that ButtonGroup with ToggleButtons is not the same as a ToggleGroup. The former will allow multiple buttons to be active at once, whereas the latter will only allow one button to be active at a time.",...FillModes.parameters?.docs?.description}}};try{Basic.displayName="Basic",Basic.__docgenInfo={description:"At its simplest you can just wrap any `Button` elements in a `ButtonGroup`.\n\nAll props for button scale, variant, etc stay on the Button.\nYou should use the same scale for all buttons in a group but could mix and match variants and levels.",displayName:"Basic",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#Basic"]={docgenInfo:Basic.__docgenInfo,name:"Basic",path:"src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#Basic"})}catch(__react_docgen_typescript_loader_error){}try{BasicOneButton.displayName="BasicOneButton",BasicOneButton.__docgenInfo={description:"If only a single `Button` is passed in, it will be visually the same as not wrapping in a `ButtonGroup`.",displayName:"BasicOneButton",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#BasicOneButton"]={docgenInfo:BasicOneButton.__docgenInfo,name:"BasicOneButton",path:"src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#BasicOneButton"})}catch(__react_docgen_typescript_loader_error){}try{Vertical.displayName="Vertical",Vertical.__docgenInfo={description:'ButtonGroups can be passed `orientation="vertical"` to stack buttons vertically.',displayName:"Vertical",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#Vertical"]={docgenInfo:Vertical.__docgenInfo,name:"Vertical",path:"src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#Vertical"})}catch(__react_docgen_typescript_loader_error){}try{FillModes.displayName="FillModes",FillModes.__docgenInfo={description:"ButtonGroups also work with LinkButtons and ToggleButtons.\n\nHowever ToggleButton styling is not currently ideal as the divider is hard to see.\nAlso note that ButtonGroup with ToggleButtons is not the same as a ToggleGroup. The former will allow multiple buttons to be active at once, whereas the latter will only allow one button to be active at a time.",displayName:"FillModes",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#FillModes"]={docgenInfo:FillModes.__docgenInfo,name:"FillModes",path:"src/core-components/atoms/button/buttonGroup/ButtonGroup.stories.tsx#FillModes"})}catch(__react_docgen_typescript_loader_error){}},"./src/core-components/atoms/button/button.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),clsx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),_button_module_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/core-components/atoms/button/button.module.css"),_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/core-components/atoms/tooltip/tooltip.component.tsx");const Button=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((({tooltip,disabled=!1,type="button",className,level="primary",variant="brand",scale="m",iconOnly=!1,children,focus="visible",loading=!1,...args},ref)=>{const buttonClasses=(0,clsx__WEBPACK_IMPORTED_MODULE_3__.A)(_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A.reset_button,_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A.button,_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`button-level-${level}`],_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`button-theme-${variant}`],_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`button-size-${scale}`],iconOnly&&_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A["button-icon-only"],"focus"===focus&&[_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A.focus],"visible"===focus&&_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A["focus-visible"],loading&&_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A.loading,className),button=react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{ref,...args,className:buttonClasses,type,disabled},children);return tooltip?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tooltip_tooltip_component__WEBPACK_IMPORTED_MODULE_2__.m_,{content:tooltip,padding:"s"},button):button}));Button.displayName="Button";try{Button.displayName="Button",Button.__docgenInfo={description:"It's a `<button>button</button>`. Pass in regular button props such as onClick as well as any of the props defined here.",displayName:"Button",props:{tooltip:{defaultValue:null,description:"Optional tooltip content",name:"tooltip",required:!1,type:{name:"string"}},level:{defaultValue:{value:"primary"},description:"What level of button? Defaults to 'primary'",name:"level",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},variant:{defaultValue:{value:"brand"},description:"What variant of button? Defaults to 'brand'",name:"variant",required:!1,type:{name:"enum",value:[{value:'"brand"'},{value:'"accent"'},{value:'"danger"'},{value:'"neutral"'}]}},scale:{defaultValue:{value:"m"},description:"What size of button? Defaults to 'm'",name:"scale",required:!1,type:{name:"enum",value:[{value:'"s"'},{value:'"m"'},{value:'"l"'},{value:'"xl"'},{value:'"xs"'},{value:'"xxs"'}]}},iconOnly:{defaultValue:{value:"false"},description:"Does the button only include a single SVG? If so we will tweak styles. Defaults to false.",name:"iconOnly",required:!1,type:{name:"boolean"}},focus:{defaultValue:{value:"visible"},description:"What kind of focus of button? Defaults to 'visible'",name:"focus",required:!1,type:{name:"enum",value:[{value:'"visible"'},{value:'"focus"'},{value:'"none"'}]}},loading:{defaultValue:{value:"false"},description:"should we replace content with a loading indicator",name:"loading",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"ClassName to add so you can add additional styling",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/button.component.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"src/core-components/atoms/button/button.component.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./src/core-components/atoms/button/buttonGroup/buttonGroup.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>ButtonGroup});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_button_module_css__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/core-components/atoms/button/button.module.css"),clsx__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");const ButtonGroup=({children,orientation="horizontal",horizontalSizing="hug",verticalSizing="hug",className})=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_2__.A)(_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A.group,_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`is${orientation}`],_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`ishorizontal${horizontalSizing}`],_button_module_css__WEBPACK_IMPORTED_MODULE_1__.A[`isvertical${verticalSizing}`],className)},children);try{ButtonGroup.displayName="ButtonGroup",ButtonGroup.__docgenInfo={description:"",displayName:"ButtonGroup",props:{orientation:{defaultValue:{value:"horizontal"},description:"",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},horizontalSizing:{defaultValue:{value:"hug"},description:"",name:"horizontalSizing",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"hug"'}]}},verticalSizing:{defaultValue:{value:"hug"},description:"",name:"verticalSizing",required:!1,type:{name:"enum",value:[{value:'"fill"'},{value:'"hug"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/atoms/button/buttonGroup/buttonGroup.component.tsx#ButtonGroup"]={docgenInfo:ButtonGroup.__docgenInfo,name:"ButtonGroup",path:"src/core-components/atoms/button/buttonGroup/buttonGroup.component.tsx#ButtonGroup"})}catch(__react_docgen_typescript_loader_error){}}}]);