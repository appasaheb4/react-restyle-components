"use strict";(self.webpackChunkreact_restyle_components=self.webpackChunkreact_restyle_components||[]).push([[5899],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/core-components/src/atoms/tags/tags.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllVariants:()=>AllVariants,Basic:()=>Basic,CategoryFilter:()=>CategoryFilter,DangerVariant:()=>DangerVariant,Disabled:()=>Disabled,HashtagInput:()=>HashtagInput,InteractivePlayground:()=>InteractivePlayground,LongTags:()=>LongTags,NonRemovable:()=>NonRemovable,PrimaryVariant:()=>PrimaryVariant,SkillsSelector:()=>SkillsSelector,SmallSize:()=>SmallSize,SuccessVariant:()=>SuccessVariant,WarningVariant:()=>WarningVariant,WithError:()=>WithError,WithInitialTags:()=>WithInitialTags,WithLabel:()=>WithLabel,WithMaxTags:()=>WithMaxTags,__namedExportsOrder:()=>__namedExportsOrder,default:()=>tags_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),tc_module=__webpack_require__("./src/core-components/src/tc.module.css"),tc_module_default=__webpack_require__.n(tc_module),utility_util=__webpack_require__("./src/core-components/src/utils/utility.util.ts");const Tags=({defaultTags=[],placeholder="Type and press Enter to add tags...",maxTags,disabled=!1,className="",label,hasError=!1,errorMessage,removable=!0,tagVariant="default",size="md",onChange,onBlur,onTagAdd,onTagRemove})=>{const[tags,setTags]=(0,react.useState)(defaultTags),[inputValue,setInputValue]=(0,react.useState)(""),[isFocused,setIsFocused]=(0,react.useState)(!1),inputRef=(0,react.useRef)(null),tagVariants={default:tc_module_default()["bg-gray-100"]+" "+tc_module_default()["text-gray-800"]+" "+tc_module_default()["border-gray-200"],primary:tc_module_default()["bg-blue-100"]+" "+tc_module_default()["text-blue-800"]+" "+tc_module_default()["border-blue-200"],secondary:tc_module_default()["bg-gray-100"]+" "+tc_module_default()["text-gray-700"]+" "+tc_module_default()["border-gray-300"],success:tc_module_default()["bg-green-100"]+" "+tc_module_default()["text-green-800"]+" "+tc_module_default()["border-green-200"],warning:tc_module_default()["bg-yellow-100"]+" "+tc_module_default()["text-yellow-800"]+" "+tc_module_default()["border-yellow-200"],danger:tc_module_default()["bg-red-100"]+" "+tc_module_default()["text-red-800"]+" "+tc_module_default()["border-red-200"]},sizeStyles={sm:{tag:tc_module_default()["text-xs"]+" "+tc_module_default()["px-2"]+" "+tc_module_default()["py-1"],input:tc_module_default()["text-sm"]+" "+tc_module_default()["p-2"],removeBtn:tc_module_default()["w-3"]+" "+tc_module_default()["h-3"]},md:{tag:tc_module_default()["text-sm"]+" "+tc_module_default()["px-3"]+" "+tc_module_default()["py-1"],input:tc_module_default()["text-base"]+" "+tc_module_default()["p-3"],removeBtn:tc_module_default()["w-4"]+" "+tc_module_default()["h-4"]},lg:{tag:tc_module_default()["text-base"]+" "+tc_module_default()["px-4"]+" "+tc_module_default()["py-2"],input:tc_module_default()["text-lg"]+" "+tc_module_default()["p-4"],removeBtn:tc_module_default()["w-5"]+" "+tc_module_default()["h-5"]}},addTag=tag=>{const trimmedTag=tag.trim();if(!trimmedTag)return;if(tags.includes(trimmedTag))return void setInputValue("");if(maxTags&&tags.length>=maxTags)return void setInputValue("");const newTags=[...tags,trimmedTag];setTags(newTags),setInputValue(""),onChange?.(newTags),onTagAdd?.(trimmedTag)},removeTag=indexToRemove=>{if(!removable)return;const tagToRemove=tags[indexToRemove],newTags=tags.filter(((_,index)=>index!==indexToRemove));setTags(newTags),onChange?.(newTags),onTagRemove?.(tagToRemove,indexToRemove)};return react.createElement("div",{className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["flex-col"],tc_module_default()["w-full"],className)},label&&react.createElement("label",{className:(0,utility_util.cn)(tc_module_default()["text-sm"],tc_module_default()["font-medium"],tc_module_default()["mb-2"],hasError?tc_module_default()["text-red-600"]:tc_module_default()["text-gray-700"])},label,maxTags&&react.createElement("span",{className:(0,utility_util.cn)(tc_module_default()["text-xs"],tc_module_default()["text-gray-500"],tc_module_default()["ml-2"])},"(",tags.length,"/",maxTags,")")),react.createElement("div",{onClick:()=>{disabled||inputRef.current?.focus()},className:(0,utility_util.cn)(tc_module_default()["min-h-10"],tc_module_default()["w-full"],tc_module_default().border,tc_module_default()["rounded-md"],tc_module_default()["bg-white"],tc_module_default().flex,tc_module_default()["flex-wrap"],tc_module_default()["gap-2"],tc_module_default()["p-2"],tc_module_default()["cursor-text"],tc_module_default()["transition-colors"],isFocused&&!hasError&&tc_module_default()["border-blue-500"]+" "+tc_module_default()["ring-1"]+" "+tc_module_default()["ring-blue-500"],hasError?tc_module_default()["border-red-500"]:tc_module_default()["border-gray-300"],disabled&&tc_module_default()["bg-gray-50"]+" "+tc_module_default()["cursor-not-allowed"],!disabled&&tc_module_default()["hover:border-gray-400"])},tags.map(((tag,index)=>react.createElement("span",{key:`${tag}-${index}`,className:(0,utility_util.cn)(tc_module_default().flex,tc_module_default()["inline-flex"],tc_module_default()["items-center"],tc_module_default().border,tc_module_default()["rounded-full"],tc_module_default()["font-medium"],tc_module_default()["transition-colors"],tc_module_default()["items-center"],sizeStyles[size].tag,tagVariants[tagVariant],disabled&&tc_module_default()["opacity-60"])},react.createElement("span",{className:(0,utility_util.cn)(tc_module_default().truncate,tc_module_default()["max-w-32"])},tag),removable&&!disabled&&react.createElement("button",{type:"button",onClick:e=>{e.stopPropagation(),removeTag(index)},className:(0,utility_util.cn)(tc_module_default()["ml-2"],tc_module_default()["flex-shrink-0"],tc_module_default()["rounded-full"],tc_module_default()["hover:bg-black"],tc_module_default()["hover:bg-opacity-10"],tc_module_default()["transition-colors"],tc_module_default()["focus:outline-none"],tc_module_default()["focus:ring-2"],tc_module_default()["focus:ring-offset-1"],tc_module_default()["focus:ring-gray-500"]),"aria-label":`Remove ${tag} tag`},react.createElement("svg",{className:(0,utility_util.cn)(sizeStyles[size].removeBtn),fill:"currentColor",viewBox:"0 0 20 20"},react.createElement("path",{fillRule:"evenodd",d:"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",clipRule:"evenodd"})))))),(!maxTags||tags.length<maxTags)&&react.createElement("input",{ref:inputRef,type:"text",value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyDown:e=>{"Enter"===e.key?(e.preventDefault(),addTag(inputValue)):"Backspace"===e.key&&!inputValue&&tags.length>0?removeTag(tags.length-1):"Escape"===e.key&&(setInputValue(""),inputRef.current?.blur())},onFocus:()=>setIsFocused(!0),onBlur:()=>{setIsFocused(!1),inputValue.trim()&&addTag(inputValue),onBlur?.(tags)},placeholder:0===tags.length?placeholder:"",disabled,className:(0,utility_util.cn)(tc_module_default()["flex-1"],tc_module_default()["min-w-32"],tc_module_default()["border-0"],tc_module_default()["outline-none"],tc_module_default()["bg-transparent"],sizeStyles[size].input.replace(tc_module_default()["p-3"],tc_module_default()["p-1"]),disabled&&tc_module_default()["cursor-not-allowed"]),"aria-label":"Add new tag"})),(errorMessage||maxTags)&&react.createElement("div",{className:(0,utility_util.cn)(tc_module_default()["mt-1"],tc_module_default().flex,tc_module_default()["justify-between"],tc_module_default()["text-xs"])},errorMessage&&hasError&&react.createElement("span",{className:(0,utility_util.cn)(tc_module_default()["text-red-600"])},errorMessage),maxTags&&!hasError&&react.createElement("span",{className:(0,utility_util.cn)(tc_module_default()["text-gray-500"],tc_module_default()["ml-auto"])},tags.length,"/",maxTags," tags")),!hasError&&!errorMessage&&react.createElement("p",{className:(0,utility_util.cn)(tc_module_default()["mt-1"],tc_module_default()["text-xs"],tc_module_default()["text-gray-500"])},"Press Enter to add tags, Backspace to remove last tag"))};try{Tags.displayName="Tags",Tags.__docgenInfo={description:"",displayName:"Tags",props:{defaultTags:{defaultValue:{value:"[]"},description:"Array of initial tags",name:"defaultTags",required:!1,type:{name:"string[]"}},placeholder:{defaultValue:{value:"Type and press Enter to add tags..."},description:"Placeholder text for input",name:"placeholder",required:!1,type:{name:"string"}},maxTags:{defaultValue:null,description:"Maximum number of tags allowed",name:"maxTags",required:!1,type:{name:"number"}},disabled:{defaultValue:{value:"false"},description:"Whether the input is disabled",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:{value:""},description:"Custom className for styling",name:"className",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Label for the tags input",name:"label",required:!1,type:{name:"string"}},hasError:{defaultValue:{value:"false"},description:"Whether to show error state",name:"hasError",required:!1,type:{name:"boolean"}},errorMessage:{defaultValue:null,description:"Error message to display",name:"errorMessage",required:!1,type:{name:"string"}},removable:{defaultValue:{value:"true"},description:"Whether tags are removable",name:"removable",required:!1,type:{name:"boolean"}},tagVariant:{defaultValue:{value:"default"},description:"Custom tag colors",name:"tagVariant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"warning"'},{value:'"danger"'}]}},size:{defaultValue:{value:"md"},description:"Size of tags",name:"size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},onChange:{defaultValue:null,description:"Callback when tags change",name:"onChange",required:!1,type:{name:"((tags: string[]) => void)"}},onBlur:{defaultValue:null,description:"Callback when input loses focus",name:"onBlur",required:!1,type:{name:"((tags: string[]) => void)"}},onTagAdd:{defaultValue:null,description:"Callback when a tag is added",name:"onTagAdd",required:!1,type:{name:"((tag: string) => void)"}},onTagRemove:{defaultValue:null,description:"Callback when a tag is removed",name:"onTagRemove",required:!1,type:{name:"((tag: string, index: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/core-components/src/atoms/tags/tags.component.tsx#Tags"]={docgenInfo:Tags.__docgenInfo,name:"Tags",path:"src/core-components/src/atoms/tags/tags.component.tsx#Tags"})}catch(__react_docgen_typescript_loader_error){}const tags_stories={title:"Core Components/Atoms/Tags",component:Tags,tags:["autodocs"],parameters:{componentSubtitle:"import { Tags } from 'react-restyle-components'",docs:{description:{component:"A flexible tags input component with keyboard navigation, validation, and customizable styling. Perfect for tagging, categorization, and multi-value inputs."}}},argTypes:{defaultTags:{control:"object",description:"Initial array of tags"},placeholder:{control:"text",description:"Placeholder text for the input field"},maxTags:{control:"number",description:"Maximum number of tags allowed"},disabled:{control:"boolean",description:"Whether the input is disabled"},className:{control:"text",description:"Additional CSS classes"},label:{control:"text",description:"Label text for the input"},hasError:{control:"boolean",description:"Whether to show error state"},errorMessage:{control:"text",description:"Error message to display"},removable:{control:"boolean",description:"Whether tags can be removed"},tagVariant:{control:"select",options:["default","primary","secondary","success","warning","danger"],description:"Color variant for tags"},size:{control:"select",options:["sm","md","lg"],description:"Size of the component"}}},Template=args=>{const[tags,setTags]=(0,react.useState)(args.defaultTags||[]);return react.createElement("div",{style:{padding:"20px",maxWidth:"600px"}},react.createElement(Tags,{...args,defaultTags:tags,onChange:newTags=>{setTags(newTags),(0,dist.XI)("onChange")(newTags)},onTagAdd:tag=>{(0,dist.XI)("onTagAdd")(tag)},onTagRemove:(tag,index)=>{(0,dist.XI)("onTagRemove")(tag,index)},onBlur:currentTags=>{(0,dist.XI)("onBlur")(currentTags)}}),react.createElement("div",{style:{marginTop:"20px",padding:"15px",backgroundColor:"#f8f9fa",borderRadius:"4px"}},react.createElement("h4",{style:{margin:"0 0 10px 0",fontSize:"14px",color:"#333"}},"Current Tags (",tags.length,"):"),tags.length>0?react.createElement("ul",{style:{margin:0,paddingLeft:"20px",fontSize:"12px"}},tags.map(((tag,index)=>react.createElement("li",{key:index,style:{marginBottom:"2px",color:"#666"}},index+1,'. "',tag,'"')))):react.createElement("p",{style:{margin:0,fontSize:"12px",color:"#999"}},"No tags added yet")))},Basic={render:Template,args:{placeholder:"Type and press Enter to add tags...",defaultTags:[]},parameters:{docs:{description:{story:"Basic tags input with default settings. Type and press Enter to add tags."}}}},WithInitialTags={render:Template,args:{placeholder:"Add more tags...",defaultTags:["React","TypeScript","Tailwind CSS"]},parameters:{docs:{description:{story:"Tags input with pre-populated tags."}}}},WithLabel={render:Template,args:{label:"Skills & Technologies",placeholder:"Add your skills...",defaultTags:["JavaScript","Node.js"]},parameters:{docs:{description:{story:"Tags input with a descriptive label."}}}},WithMaxTags={render:Template,args:{label:"Select up to 5 tags",maxTags:5,placeholder:"Add up to 5 tags...",defaultTags:["Tag 1","Tag 2","Tag 3"]},parameters:{docs:{description:{story:"Tags input with a maximum limit of 5 tags. Input becomes disabled when limit is reached."}}}},SmallSize={render:Template,args:{label:"Small Tags",size:"sm",placeholder:"Small sized tags...",defaultTags:["Small","Compact","Minimal"]},parameters:{docs:{description:{story:"Small sized tags component."}}}},PrimaryVariant={render:Template,args:{label:"Primary Tags",tagVariant:"primary",placeholder:"Add primary tags...",defaultTags:["Important","Featured","Priority"]},parameters:{docs:{description:{story:"Tags with primary color variant (blue)."}}}},SuccessVariant={render:Template,args:{label:"Success Tags",tagVariant:"success",placeholder:"Add success tags...",defaultTags:["Completed","Approved","Success"]},parameters:{docs:{description:{story:"Tags with success color variant (green)."}}}},WarningVariant={render:Template,args:{label:"Warning Tags",tagVariant:"warning",placeholder:"Add warning tags...",defaultTags:["Pending","Review","Caution"]},parameters:{docs:{description:{story:"Tags with warning color variant (yellow)."}}}},DangerVariant={render:Template,args:{label:"Danger Tags",tagVariant:"danger",placeholder:"Add danger tags...",defaultTags:["Error","Critical","Urgent"]},parameters:{docs:{description:{story:"Tags with danger color variant (red)."}}}},WithError={render:Template,args:{label:"Tags with Error",hasError:!0,errorMessage:"Please add at least 3 tags",placeholder:"Add tags to fix error...",defaultTags:["Only","Two"]},parameters:{docs:{description:{story:"Tags input in error state with error message."}}}},Disabled={render:Template,args:{label:"Disabled Tags",disabled:!0,placeholder:"This input is disabled...",defaultTags:["Read","Only","Tags"]},parameters:{docs:{description:{story:"Disabled tags input - tags cannot be added or removed."}}}},NonRemovable={render:Template,args:{label:"Non-removable Tags",removable:!1,placeholder:"Add permanent tags...",defaultTags:["Permanent","Fixed","Locked"]},parameters:{docs:{description:{story:"Tags that cannot be removed once added."}}}},LongTags={render:Template,args:{label:"Long Tag Names",placeholder:"Add very long tag names...",defaultTags:["Very Long Tag Name That Gets Truncated","Another Extremely Long Tag Name","Short","This is an incredibly long tag name that should be truncated"]},parameters:{docs:{description:{story:"Demonstration of how long tag names are handled with truncation."}}}},AllVariants={render:()=>react.createElement("div",{style:{padding:"20px"}},react.createElement("div",{style:{marginBottom:"30px"}},react.createElement("h3",{style:{marginBottom:"15px"}},"Color Variants"),react.createElement("div",{style:{display:"grid",gap:"20px"}},[{variant:"default",tags:["Default","Neutral","Gray"]},{variant:"primary",tags:["Primary","Important","Blue"]},{variant:"secondary",tags:["Secondary","Support","Muted"]},{variant:"success",tags:["Success","Complete","Green"]},{variant:"warning",tags:["Warning","Caution","Yellow"]},{variant:"danger",tags:["Danger","Error","Red"]}].map((({variant,tags})=>react.createElement(Tags,{key:variant,label:`${variant.charAt(0).toUpperCase()+variant.slice(1)} Variant`,tagVariant:variant,defaultTags:tags,placeholder:`${variant} tags...`,onChange:(0,dist.XI)(`${variant}-onChange`)}))))),react.createElement("div",null,react.createElement("h3",{style:{marginBottom:"15px"}},"Size Variants"),react.createElement("div",{style:{display:"grid",gap:"20px"}},[{size:"sm",tags:["Small","Compact"]},{size:"md",tags:["Medium","Default"]}].map((({size,tags})=>react.createElement(Tags,{key:size,label:`${size.toUpperCase()} Size`,size,defaultTags:tags,placeholder:`${size} sized tags...`,onChange:(0,dist.XI)(`${size}-onChange`)})))))),parameters:{docs:{description:{story:"Comparison of all available color variants and sizes."}}}},InteractivePlayground={render:args=>{const[currentTags,setCurrentTags]=(0,react.useState)(args.defaultTags||[]),[stats,setStats]=(0,react.useState)({totalAdded:0,totalRemoved:0,lastAction:"None"});return react.createElement("div",{style:{padding:"20px",maxWidth:"800px"}},react.createElement("div",{style:{marginBottom:"20px",padding:"15px",backgroundColor:"#e3f2fd",borderRadius:"8px"}},react.createElement("h3",{style:{margin:"0 0 10px 0",color:"#1976d2"}},"Interactive Playground"),react.createElement("p",{style:{margin:"0",fontSize:"14px",color:"#424242"}},"Try all features: add tags with Enter, remove with X or Backspace, test limits and variants.")),react.createElement(Tags,{...args,defaultTags:currentTags,onChange:newTags=>{setCurrentTags(newTags),(0,dist.XI)("onChange")(newTags)},onTagAdd:tag=>{setStats((prev=>({...prev,totalAdded:prev.totalAdded+1,lastAction:`Added: "${tag}"`}))),(0,dist.XI)("onTagAdd")(tag)},onTagRemove:(tag,index)=>{setStats((prev=>({...prev,totalRemoved:prev.totalRemoved+1,lastAction:`Removed: "${tag}" at index ${index}`}))),(0,dist.XI)("onTagRemove")(tag,index)},onBlur:tags=>{setStats((prev=>({...prev,lastAction:"Input blurred"}))),(0,dist.XI)("onBlur")(tags)}}),react.createElement("div",{style:{marginTop:"20px",display:"grid",gridTemplateColumns:"1fr 1fr",gap:"20px"}},react.createElement("div",{style:{padding:"15px",backgroundColor:"#f1f8e9",borderRadius:"8px"}},react.createElement("h4",{style:{margin:"0 0 10px 0",color:"#388e3c"}},"Current State"),react.createElement("ul",{style:{margin:0,paddingLeft:"20px",fontSize:"14px"}},react.createElement("li",null,"Total tags: ",currentTags.length),react.createElement("li",null,"Max allowed: ",args.maxTags||"Unlimited"),react.createElement("li",null,"Remaining:"," ",args.maxTags?args.maxTags-currentTags.length:"∞"))),react.createElement("div",{style:{padding:"15px",backgroundColor:"#fff3e0",borderRadius:"8px"}},react.createElement("h4",{style:{margin:"0 0 10px 0",color:"#f57c00"}},"Statistics"),react.createElement("ul",{style:{margin:0,paddingLeft:"20px",fontSize:"14px"}},react.createElement("li",null,"Tags added: ",stats.totalAdded),react.createElement("li",null,"Tags removed: ",stats.totalRemoved),react.createElement("li",null,"Last action: ",stats.lastAction)))),react.createElement("div",{style:{marginTop:"20px",padding:"15px",backgroundColor:"#f5f5f5",borderRadius:"8px"}},react.createElement("h4",{style:{margin:"0 0 10px 0",fontSize:"14px"}},"Keyboard Shortcuts"),react.createElement("ul",{style:{margin:0,paddingLeft:"20px",fontSize:"12px",color:"#666"}},react.createElement("li",null,react.createElement("strong",null,"Enter:")," Add current input as tag"),react.createElement("li",null,react.createElement("strong",null,"Backspace:")," Remove last tag (when input is empty)"),react.createElement("li",null,react.createElement("strong",null,"Escape:")," Clear input and blur"),react.createElement("li",null,react.createElement("strong",null,"Click X:")," Remove specific tag"))))},args:{label:"Interactive Tags Playground",placeholder:"Type anything and press Enter...",maxTags:10,tagVariant:"primary",size:"md",defaultTags:["Try","Adding","More"]},parameters:{docs:{description:{story:"Full interactive playground with live statistics and all component features."}}}},SkillsSelector={render:Template,args:{label:"Your Skills",placeholder:"Add your programming skills...",maxTags:10,tagVariant:"primary",defaultTags:["JavaScript","React","TypeScript"]},parameters:{docs:{description:{story:"Real-world example: Skills selector for a developer profile."}}}},CategoryFilter={render:Template,args:{label:"Filter by Categories",placeholder:"Add categories to filter...",maxTags:5,tagVariant:"secondary",defaultTags:["Technology","Design"]},parameters:{docs:{description:{story:"Real-world example: Category filter for content or products."}}}},HashtagInput={render:Template,args:{label:"Hashtags",placeholder:"Add hashtags for your post...",maxTags:15,tagVariant:"success",defaultTags:["#coding","#webdev","#react"]},parameters:{docs:{description:{story:"Real-world example: Hashtag input for social media posts."}}}},__namedExportsOrder=["Basic","WithInitialTags","WithLabel","WithMaxTags","SmallSize","PrimaryVariant","SuccessVariant","WarningVariant","DangerVariant","WithError","Disabled","NonRemovable","LongTags","AllVariants","InteractivePlayground","SkillsSelector","CategoryFilter","HashtagInput"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    placeholder: 'Type and press Enter to add tags...',\n    defaultTags: []\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Basic tags input with default settings. Type and press Enter to add tags.'\n      }\n    }\n  }\n}",...Basic.parameters?.docs?.source}}},WithInitialTags.parameters={...WithInitialTags.parameters,docs:{...WithInitialTags.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    placeholder: 'Add more tags...',\n    defaultTags: ['React', 'TypeScript', 'Tailwind CSS']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags input with pre-populated tags.'\n      }\n    }\n  }\n}",...WithInitialTags.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Skills & Technologies',\n    placeholder: 'Add your skills...',\n    defaultTags: ['JavaScript', 'Node.js']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags input with a descriptive label.'\n      }\n    }\n  }\n}",...WithLabel.parameters?.docs?.source}}},WithMaxTags.parameters={...WithMaxTags.parameters,docs:{...WithMaxTags.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Select up to 5 tags',\n    maxTags: 5,\n    placeholder: 'Add up to 5 tags...',\n    defaultTags: ['Tag 1', 'Tag 2', 'Tag 3']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags input with a maximum limit of 5 tags. Input becomes disabled when limit is reached.'\n      }\n    }\n  }\n}",...WithMaxTags.parameters?.docs?.source}}},SmallSize.parameters={...SmallSize.parameters,docs:{...SmallSize.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Small Tags',\n    size: 'sm',\n    placeholder: 'Small sized tags...',\n    defaultTags: ['Small', 'Compact', 'Minimal']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Small sized tags component.'\n      }\n    }\n  }\n}",...SmallSize.parameters?.docs?.source}}},PrimaryVariant.parameters={...PrimaryVariant.parameters,docs:{...PrimaryVariant.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Primary Tags',\n    tagVariant: 'primary',\n    placeholder: 'Add primary tags...',\n    defaultTags: ['Important', 'Featured', 'Priority']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags with primary color variant (blue).'\n      }\n    }\n  }\n}",...PrimaryVariant.parameters?.docs?.source}}},SuccessVariant.parameters={...SuccessVariant.parameters,docs:{...SuccessVariant.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Success Tags',\n    tagVariant: 'success',\n    placeholder: 'Add success tags...',\n    defaultTags: ['Completed', 'Approved', 'Success']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags with success color variant (green).'\n      }\n    }\n  }\n}",...SuccessVariant.parameters?.docs?.source}}},WarningVariant.parameters={...WarningVariant.parameters,docs:{...WarningVariant.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Warning Tags',\n    tagVariant: 'warning',\n    placeholder: 'Add warning tags...',\n    defaultTags: ['Pending', 'Review', 'Caution']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags with warning color variant (yellow).'\n      }\n    }\n  }\n}",...WarningVariant.parameters?.docs?.source}}},DangerVariant.parameters={...DangerVariant.parameters,docs:{...DangerVariant.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Danger Tags',\n    tagVariant: 'danger',\n    placeholder: 'Add danger tags...',\n    defaultTags: ['Error', 'Critical', 'Urgent']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags with danger color variant (red).'\n      }\n    }\n  }\n}",...DangerVariant.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Tags with Error',\n    hasError: true,\n    errorMessage: 'Please add at least 3 tags',\n    placeholder: 'Add tags to fix error...',\n    defaultTags: ['Only', 'Two']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags input in error state with error message.'\n      }\n    }\n  }\n}",...WithError.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Disabled Tags',\n    disabled: true,\n    placeholder: 'This input is disabled...',\n    defaultTags: ['Read', 'Only', 'Tags']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Disabled tags input - tags cannot be added or removed.'\n      }\n    }\n  }\n}",...Disabled.parameters?.docs?.source}}},NonRemovable.parameters={...NonRemovable.parameters,docs:{...NonRemovable.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Non-removable Tags',\n    removable: false,\n    placeholder: 'Add permanent tags...',\n    defaultTags: ['Permanent', 'Fixed', 'Locked']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Tags that cannot be removed once added.'\n      }\n    }\n  }\n}",...NonRemovable.parameters?.docs?.source}}},LongTags.parameters={...LongTags.parameters,docs:{...LongTags.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Long Tag Names',\n    placeholder: 'Add very long tag names...',\n    defaultTags: ['Very Long Tag Name That Gets Truncated', 'Another Extremely Long Tag Name', 'Short', 'This is an incredibly long tag name that should be truncated']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstration of how long tag names are handled with truncation.'\n      }\n    }\n  }\n}",...LongTags.parameters?.docs?.source}}},AllVariants.parameters={...AllVariants.parameters,docs:{...AllVariants.parameters?.docs,source:{originalSource:"{\n  render: () => <div style={{\n    padding: '20px'\n  }}>\n      <div style={{\n      marginBottom: '30px'\n    }}>\n        <h3 style={{\n        marginBottom: '15px'\n      }}>Color Variants</h3>\n        <div style={{\n        display: 'grid',\n        gap: '20px'\n      }}>\n          {[{\n          variant: 'default',\n          tags: ['Default', 'Neutral', 'Gray']\n        }, {\n          variant: 'primary',\n          tags: ['Primary', 'Important', 'Blue']\n        }, {\n          variant: 'secondary',\n          tags: ['Secondary', 'Support', 'Muted']\n        }, {\n          variant: 'success',\n          tags: ['Success', 'Complete', 'Green']\n        }, {\n          variant: 'warning',\n          tags: ['Warning', 'Caution', 'Yellow']\n        }, {\n          variant: 'danger',\n          tags: ['Danger', 'Error', 'Red']\n        }].map(({\n          variant,\n          tags\n        }) => <Tags key={variant} label={`${variant.charAt(0).toUpperCase() + variant.slice(1)} Variant`} tagVariant={variant as any} defaultTags={tags} placeholder={`${variant} tags...`} onChange={action(`${variant}-onChange`)} />)}\n        </div>\n      </div>\n\n      <div>\n        <h3 style={{\n        marginBottom: '15px'\n      }}>Size Variants</h3>\n        <div style={{\n        display: 'grid',\n        gap: '20px'\n      }}>\n          {[{\n          size: 'sm',\n          tags: ['Small', 'Compact']\n        }, {\n          size: 'md',\n          tags: ['Medium', 'Default']\n        }].map(({\n          size,\n          tags\n        }) => <Tags key={size} label={`${size.toUpperCase()} Size`} size={size as any} defaultTags={tags} placeholder={`${size} sized tags...`} onChange={action(`${size}-onChange`)} />)}\n        </div>\n      </div>\n    </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: 'Comparison of all available color variants and sizes.'\n      }\n    }\n  }\n}",...AllVariants.parameters?.docs?.source}}},InteractivePlayground.parameters={...InteractivePlayground.parameters,docs:{...InteractivePlayground.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const [currentTags, setCurrentTags] = useState(args.defaultTags || []);\n    const [stats, setStats] = useState({\n      totalAdded: 0,\n      totalRemoved: 0,\n      lastAction: 'None'\n    });\n    return <div style={{\n      padding: '20px',\n      maxWidth: '800px'\n    }}>\n        <div style={{\n        marginBottom: '20px',\n        padding: '15px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px'\n      }}>\n          <h3 style={{\n          margin: '0 0 10px 0',\n          color: '#1976d2'\n        }}>\n            Interactive Playground\n          </h3>\n          <p style={{\n          margin: '0',\n          fontSize: '14px',\n          color: '#424242'\n        }}>\n            Try all features: add tags with Enter, remove with X or Backspace,\n            test limits and variants.\n          </p>\n        </div>\n\n        <Tags {...args} defaultTags={currentTags} onChange={newTags => {\n        setCurrentTags(newTags);\n        action('onChange')(newTags);\n      }} onTagAdd={tag => {\n        setStats(prev => ({\n          ...prev,\n          totalAdded: prev.totalAdded + 1,\n          lastAction: `Added: \"${tag}\"`\n        }));\n        action('onTagAdd')(tag);\n      }} onTagRemove={(tag, index) => {\n        setStats(prev => ({\n          ...prev,\n          totalRemoved: prev.totalRemoved + 1,\n          lastAction: `Removed: \"${tag}\" at index ${index}`\n        }));\n        action('onTagRemove')(tag, index);\n      }} onBlur={tags => {\n        setStats(prev => ({\n          ...prev,\n          lastAction: 'Input blurred'\n        }));\n        action('onBlur')(tags);\n      }} />\n\n        <div style={{\n        marginTop: '20px',\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gap: '20px'\n      }}>\n          <div style={{\n          padding: '15px',\n          backgroundColor: '#f1f8e9',\n          borderRadius: '8px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#388e3c'\n          }}>\n              Current State\n            </h4>\n            <ul style={{\n            margin: 0,\n            paddingLeft: '20px',\n            fontSize: '14px'\n          }}>\n              <li>Total tags: {currentTags.length}</li>\n              <li>Max allowed: {args.maxTags || 'Unlimited'}</li>\n              <li>\n                Remaining:{' '}\n                {args.maxTags ? args.maxTags - currentTags.length : '∞'}\n              </li>\n            </ul>\n          </div>\n\n          <div style={{\n          padding: '15px',\n          backgroundColor: '#fff3e0',\n          borderRadius: '8px'\n        }}>\n            <h4 style={{\n            margin: '0 0 10px 0',\n            color: '#f57c00'\n          }}>Statistics</h4>\n            <ul style={{\n            margin: 0,\n            paddingLeft: '20px',\n            fontSize: '14px'\n          }}>\n              <li>Tags added: {stats.totalAdded}</li>\n              <li>Tags removed: {stats.totalRemoved}</li>\n              <li>Last action: {stats.lastAction}</li>\n            </ul>\n          </div>\n        </div>\n\n        <div style={{\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n          <h4 style={{\n          margin: '0 0 10px 0',\n          fontSize: '14px'\n        }}>\n            Keyboard Shortcuts\n          </h4>\n          <ul style={{\n          margin: 0,\n          paddingLeft: '20px',\n          fontSize: '12px',\n          color: '#666'\n        }}>\n            <li>\n              <strong>Enter:</strong> Add current input as tag\n            </li>\n            <li>\n              <strong>Backspace:</strong> Remove last tag (when input is empty)\n            </li>\n            <li>\n              <strong>Escape:</strong> Clear input and blur\n            </li>\n            <li>\n              <strong>Click X:</strong> Remove specific tag\n            </li>\n          </ul>\n        </div>\n      </div>;\n  },\n  args: {\n    label: 'Interactive Tags Playground',\n    placeholder: 'Type anything and press Enter...',\n    maxTags: 10,\n    tagVariant: 'primary',\n    size: 'md',\n    defaultTags: ['Try', 'Adding', 'More']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Full interactive playground with live statistics and all component features.'\n      }\n    }\n  }\n}",...InteractivePlayground.parameters?.docs?.source}}},SkillsSelector.parameters={...SkillsSelector.parameters,docs:{...SkillsSelector.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Your Skills',\n    placeholder: 'Add your programming skills...',\n    maxTags: 10,\n    tagVariant: 'primary',\n    defaultTags: ['JavaScript', 'React', 'TypeScript']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Real-world example: Skills selector for a developer profile.'\n      }\n    }\n  }\n}",...SkillsSelector.parameters?.docs?.source}}},CategoryFilter.parameters={...CategoryFilter.parameters,docs:{...CategoryFilter.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Filter by Categories',\n    placeholder: 'Add categories to filter...',\n    maxTags: 5,\n    tagVariant: 'secondary',\n    defaultTags: ['Technology', 'Design']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Real-world example: Category filter for content or products.'\n      }\n    }\n  }\n}",...CategoryFilter.parameters?.docs?.source}}},HashtagInput.parameters={...HashtagInput.parameters,docs:{...HashtagInput.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    label: 'Hashtags',\n    placeholder: 'Add hashtags for your post...',\n    maxTags: 15,\n    tagVariant: 'success',\n    defaultTags: ['#coding', '#webdev', '#react']\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Real-world example: Hashtag input for social media posts.'\n      }\n    }\n  }\n}",...HashtagInput.parameters?.docs?.source}}}},"./src/core-components/src/utils/utility.util.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{cn:()=>cn});var clsx__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/clsx/dist/clsx.mjs"),tailwind_merge__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tailwind-merge/dist/bundle-mjs.mjs");const cn=(...inputs)=>(0,tailwind_merge__WEBPACK_IMPORTED_MODULE_0__.QP)((0,clsx__WEBPACK_IMPORTED_MODULE_1__.A)(inputs))}}]);